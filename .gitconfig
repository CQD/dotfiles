[core]
	excludesfile = ~/.gitignore_global

[commit]
    gpgsign = true

[color]
        ui = auto
        status = auto
        branch = auto

[alias]
        ci = commit
        amend = commit --amend --no-edit
        co = checkout
        cm = checkout master
        cs = checkout staging
        di = diff
        din = diff --name-only
        dist = diff --stat
        dicw = diff --color-words
        dic = diff --cached
        dinc = diff --name-only --cached
        distc = diff --stat --cached
        dicwc = diff --color-words --cached
        st = status
        sh = show
        shn = show --name-only
        shst = show --stat
        br = branch
        co = checkout
        rb = rebase
        rbi = rebase --interactive
        rbc = rebase --continue
        rba = rebase --abort
        cp = cherry-pick
        lg = log --graph --pretty=ol  --abbrev-commit --date=local
        lga = log --graph --pretty=ol --abbrev-commit --date=local --all

        # update branch
        uu = "!f() { \
            remote=${1:-origin} \
            br=${2:-$(git branch-name)}; \
            git co $br && git pull $remote $br; \
        }; f"
        um = "!f() { git uu origin master; }; f"
        us = "!f() { git uu origin staging; }; f"

        fr = "!f(){ \
            branch=$(git rev-parse --abbrev-ref HEAD); \
            echo Fetch and reset to origin/$branch...; \
            git fetch origin $branch; \
            git reset origin/$branch --hard; \
        }; f"

        fc = "!f(){ \
            branch=${1}; \
            if [ "" == "$branch" ]; then echo Branch name required; return -1; fi \
            echo Fetch and checkout to origin/$branch...; \
            git fetch origin $branch; \
            git checkout $branch; \
        }; f"

[branch]
        autosetuprebase = always

[branch "master"]
        rebase = true

[pretty]
        ol = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %C(bold black)- %cn %Creset%Cgreen(%ar)%Creset

[init]
	defaultBranch = master

[gpg]
    program = gpg

[includeIf "gitdir:~/work-repo/"]
    path = ~/work-repo/.gitconfig
